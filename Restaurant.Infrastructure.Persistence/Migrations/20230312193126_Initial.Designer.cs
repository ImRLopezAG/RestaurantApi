// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurant.Infrastructure.Persistence.Context;

#nullable disable

namespace Restaurant.Infrastructure.Persistence.Migrations {
  [DbContext(typeof(RestaurantContext))]
  [Migration("20230312193126_Initial")]
  partial class Initial {
    protected override void BuildTargetModel(ModelBuilder modelBuilder) {
#pragma warning disable 612, 618
      modelBuilder
          .HasAnnotation("ProductVersion", "6.0.14")
          .HasAnnotation("Relational:MaxIdentifierLength", 128);

      SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

      modelBuilder.Entity("Restaurant.Core.Domain.Entities.Ingredient", b => {
        b.Property<int>("Id")
            .ValueGeneratedOnAdd()
            .HasColumnType("int");

        SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

        b.Property<DateTime>("CreatedAt")
            .HasColumnType("datetime2");

        b.Property<DateTime?>("LastModifiedAt")
            .HasColumnType("datetime2");

        b.Property<string>("Name")
            .IsRequired()
            .HasColumnType("nvarchar(max)");

        b.Property<int?>("PlateId")
            .HasColumnType("int");

        b.HasKey("Id");

        b.HasIndex("PlateId");

        b.ToTable("Ingredients", ( string )null);
      });

      modelBuilder.Entity("Restaurant.Core.Domain.Entities.Order", b => {
        b.Property<int>("Id")
            .ValueGeneratedOnAdd()
            .HasColumnType("int");

        SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

        b.Property<DateTime>("CreatedAt")
            .HasColumnType("datetime2");

        b.Property<DateTime?>("LastModifiedAt")
            .HasColumnType("datetime2");

        b.Property<int>("StatusId")
            .HasColumnType("int");

        b.Property<int>("TableId")
            .HasColumnType("int");

        b.HasKey("Id");

        b.HasIndex("TableId");

        b.ToTable("Orders", ( string )null);
      });

      modelBuilder.Entity("Restaurant.Core.Domain.Entities.OrderPlate", b => {
        b.Property<int>("Id")
            .ValueGeneratedOnAdd()
            .HasColumnType("int");

        SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

        b.Property<DateTime>("CreatedAt")
            .HasColumnType("datetime2");

        b.Property<DateTime?>("LastModifiedAt")
            .HasColumnType("datetime2");

        b.Property<int>("OrderId")
            .HasColumnType("int");

        b.Property<int>("PlateId")
            .HasColumnType("int");

        b.HasKey("Id");

        b.HasIndex("OrderId");

        b.HasIndex("PlateId");

        b.ToTable("OrderPlates", ( string )null);
      });

      modelBuilder.Entity("Restaurant.Core.Domain.Entities.Plate", b => {
        b.Property<int>("Id")
            .ValueGeneratedOnAdd()
            .HasColumnType("int");

        SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

        b.Property<int>("Capacity")
            .HasColumnType("int");

        b.Property<int>("CategoryId")
            .HasColumnType("int");

        b.Property<DateTime>("CreatedAt")
            .HasColumnType("datetime2");

        b.Property<DateTime?>("LastModifiedAt")
            .HasColumnType("datetime2");

        b.Property<string>("Name")
            .IsRequired()
            .HasColumnType("nvarchar(max)");

        b.Property<int?>("OrderId")
            .HasColumnType("int");

        b.Property<double>("Price")
            .HasColumnType("float");

        b.HasKey("Id");

        b.HasIndex("OrderId");

        b.ToTable("Plates", ( string )null);
      });

      modelBuilder.Entity("Restaurant.Core.Domain.Entities.PlateIngredient", b => {
        b.Property<int>("Id")
            .ValueGeneratedOnAdd()
            .HasColumnType("int");

        SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

        b.Property<DateTime>("CreatedAt")
            .HasColumnType("datetime2");

        b.Property<int>("IngredientId")
            .HasColumnType("int");

        b.Property<DateTime?>("LastModifiedAt")
            .HasColumnType("datetime2");

        b.Property<int>("PlateId")
            .HasColumnType("int");

        b.HasKey("Id");

        b.HasIndex("IngredientId");

        b.HasIndex("PlateId");

        b.ToTable("PlateIngredients", ( string )null);
      });

      modelBuilder.Entity("Restaurant.Core.Domain.Entities.Table", b => {
        b.Property<int>("Id")
            .ValueGeneratedOnAdd()
            .HasColumnType("int");

        SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

        b.Property<int>("Capacity")
            .HasColumnType("int");

        b.Property<DateTime>("CreatedAt")
            .HasColumnType("datetime2");

        b.Property<string>("Description")
            .IsRequired()
            .HasColumnType("nvarchar(max)");

        b.Property<DateTime?>("LastModifiedAt")
            .HasColumnType("datetime2");

        b.Property<int>("StatusId")
            .HasColumnType("int");

        b.HasKey("Id");

        b.ToTable("Tables", ( string )null);
      });

      modelBuilder.Entity("Restaurant.Core.Domain.Entities.Ingredient", b => {
        b.HasOne("Restaurant.Core.Domain.Entities.Plate", null)
            .WithMany("Ingredients")
            .HasForeignKey("PlateId");
      });

      modelBuilder.Entity("Restaurant.Core.Domain.Entities.Order", b => {
        b.HasOne("Restaurant.Core.Domain.Entities.Table", "Table")
            .WithMany("Orders")
            .HasForeignKey("TableId")
            .OnDelete(DeleteBehavior.Cascade)
            .IsRequired();

        b.Navigation("Table");
      });

      modelBuilder.Entity("Restaurant.Core.Domain.Entities.OrderPlate", b => {
        b.HasOne("Restaurant.Core.Domain.Entities.Order", "Order")
            .WithMany("OrderPlates")
            .HasForeignKey("OrderId")
            .OnDelete(DeleteBehavior.Cascade)
            .IsRequired();

        b.HasOne("Restaurant.Core.Domain.Entities.Plate", "Plate")
            .WithMany("OrderPlates")
            .HasForeignKey("PlateId")
            .OnDelete(DeleteBehavior.Cascade)
            .IsRequired();

        b.Navigation("Order");

        b.Navigation("Plate");
      });

      modelBuilder.Entity("Restaurant.Core.Domain.Entities.Plate", b => {
        b.HasOne("Restaurant.Core.Domain.Entities.Order", null)
            .WithMany("Plates")
            .HasForeignKey("OrderId");
      });

      modelBuilder.Entity("Restaurant.Core.Domain.Entities.PlateIngredient", b => {
        b.HasOne("Restaurant.Core.Domain.Entities.Ingredient", "Ingredient")
            .WithMany("PlateIngredients")
            .HasForeignKey("IngredientId")
            .OnDelete(DeleteBehavior.Cascade)
            .IsRequired();

        b.HasOne("Restaurant.Core.Domain.Entities.Plate", "Plate")
            .WithMany("PlateIngredients")
            .HasForeignKey("PlateId")
            .OnDelete(DeleteBehavior.Cascade)
            .IsRequired();

        b.Navigation("Ingredient");

        b.Navigation("Plate");
      });

      modelBuilder.Entity("Restaurant.Core.Domain.Entities.Ingredient", b => {
        b.Navigation("PlateIngredients");
      });

      modelBuilder.Entity("Restaurant.Core.Domain.Entities.Order", b => {
        b.Navigation("OrderPlates");

        b.Navigation("Plates");
      });

      modelBuilder.Entity("Restaurant.Core.Domain.Entities.Plate", b => {
        b.Navigation("Ingredients");

        b.Navigation("OrderPlates");

        b.Navigation("PlateIngredients");
      });

      modelBuilder.Entity("Restaurant.Core.Domain.Entities.Table", b => {
        b.Navigation("Orders");
      });
#pragma warning restore 612, 618
    }
  }
}
